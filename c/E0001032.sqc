                                                                
/****************************************************************
 *
 *                    Source Code Generated by
 *                           CA Gen 8.6
 *
 *    Copyright (c) 2017 CA Technologies. All rights reserved.
 *
 *      TARGET OS:  WINDOWS            DBMS:  DB2 UDB         
 *
 *      ACCESS METHOD:  Embedded SQL        
 *
 *        Name:  DELETE-GOLFER
 *
 *      UserID:   mansour
 *
 *        Date:  2017/05/12  Time:  15:15:15
 *
 ***************************************************************/
/****************************************************************
 Data declarations
 ***************************************************************/
static char ief_cgen_rlse[] = "CA Gen 8.6";
static char * ss_copyright = "Copyright (c) 2017 CA Technologies. All rights reserved.";
static char ief_cgen_date[] = "2017/05/12";
static char ief_cgen_time[] = "15:15:15";
static char ief_pgmrname[9] = " mansour";
#define TGT_ANSI
#define TGT_INTERNAL
#define TGT_DASG 1
#include <tiabinc.h>
/***************************************************************
 * internal flag used for delete/disassociate td action block  *
 ***************************************************************/
TGTSTATIC char dl_0118489142[3];
static struct golfer_001dr  *pgolfer_001dr;
static void f_118489142_restrict(void);
static void f_1039_restrict(void);
static void f_118489142_delete(void);
static void f_118489142_evaluate(void);
static void f_1039(void);
/*    View for Table SCORING_RECORD */
static struct scoring_reco_027dr
{
char date0_031ef[10];
char time0_035ef[8];
char fk_golferuse_055ef[9] /* 8 + 1 */;
} scoring_reco_027dr;

/***************************************************************
 *   SQL Communication Area    (NOTE: ? ORACLE DBM ETC.)       *
 ***************************************************************/

EXEC SQL INCLUDE SQLCA;

static char long64bit_len[5];


EXEC SQL BEGIN DECLARE SECTION ;
static char userid_003ef[9] /* 8 + 1 */;
static char date0_029ef[10];
static char time0_033ef[8];
static char fk_golferuse_053ef[9] /* 8 + 1 */;
EXEC SQL END DECLARE SECTION ;
/*    View for Table GOLFER */
static struct golfer_001dr
{
char userid_005ef[9] /* 8 + 1 */;
} golfer_001dr;

static void f_118489142_error(void);
void F0003820();


void E0001032(char  *in_runtime_parm1, char  *in_runtime_parm2, 
struct ief_globdata  *in_globdata, struct DA_QUEUE_CMCB  *in_pda_queue_cmcb, 
struct golfer_001dr  *in_golfer_001dr, 
long  *prelmm_cgvalue) 
{
ief_runtime_parm1 = in_runtime_parm1;
ief_runtime_parm2 = in_runtime_parm2;
globdata = in_globdata;
pda_queue_cmcb = in_pda_queue_cmcb;
pgolfer_001dr = in_golfer_001dr;
relmm_cgvalue = *prelmm_cgvalue;
 if (setjmp(excp_jumpbuf))
{
}
 else {
strcpy(globdata->psmgr_debug_data.cur_ab_id, "0118489142");

strcpy(globdata->psmgr_debug_data.cur_ab_name, "DELETE-GOLFER");

strcpy(dl_0118489142, succeeds);

f_118489142_restrict();
f_118489142_delete();
f_118489142_evaluate();
}
return;
}



static void f_118489142_restrict(void)
{
 if (relmm_cgvalue == 0L)
{
f_1039_restrict();
goto f_0118489142_restrict_exit;
}
f_0118489142_restrict_exit: 
;
}


/*   DELETE GOLFER */
static void f_118489142_delete(void)
{
sqlca.sqlcode = 0;
Tistrcpy(userid_003ef, pgolfer_001dr->userid_005ef, sizeof(userid_003ef));
           EXEC SQL DELETE FROM GOLFER
           WHERE
                USERID = :userid_003ef
           ;
 if (((sqlca.sqlcode == 0  &&  sqlca.sqlerrd[2] == 1)) ||
    (sqlca.sqlcode == 100))
{
}
 else {
memcpy(globdata->psmgr_dasg_data.save_sqlca, &sqlca, sizeof(sqlca));
strcpy(globdata->psmgr_dasg_data.last_status, db_error);
f_118489142_error();
}
}


static void f_118489142_evaluate(void)
{
 if (relmm_cgvalue == 0L)
{
f_1039();
goto f_0118489142_evaluate_exit;
}
longjmp(excp_jumpbuf, TRACE_EXCEPTION);
f_0118489142_evaluate_exit: 
;
}


static void f_118489142_error(void)
{
strcpy(globdata->psmgr_dasg_data.status_flag, fatal_error);
 if (strcmp(dl_0118489142, succeeds) != 0)
strcpy(globdata->psmgr_dasg_data.last_status, dl_0118489142);
longjmp(excp_jumpbuf, FUNCTION_EXCEPTION);
}


/*  RESTRICT RELMM BETWEEN GOLFER AND SCORING_RECORD */
static void f_1039_restrict(void)
{
sqlca.sqlcode = 0;
Tistrcpy(userid_003ef, pgolfer_001dr->userid_005ef, sizeof(userid_003ef));
           EXEC SQL SELECT
               DATE0,
               TIME0,
               FK_GOLFERUSERID
           INTO
           :date0_029ef ,
           :time0_033ef ,
           :fk_golferuse_053ef
           FROM
               SCORING_RECORD
           WHERE
                FK_GOLFERUSERID = :userid_003ef
           ;
 if ((sqlca.sqlcode == 0) ||
    (sqlca.sqlcode == -811))
{
strcpy(dl_0118489142, restrict_error);
f_118489142_error();
}
 else  if (!(sqlca.sqlcode == 100))
{
memcpy(globdata->psmgr_dasg_data.save_sqlca, &sqlca, sizeof(sqlca));
strcpy(dl_0118489142, db_error);
f_118489142_error();
}
}


/*  DISASSOC RELMM IS_MAINTAINED_BY */
static void f_1039(void)
{
globdata->v1present = 'N';
globdata->v2present = 'Y';
globdata->cascade1 = 'Y';
globdata->cascade2 = 'N';
globdata->processq_flag = 'N';
F0003820(ief_runtime_parm1,
    ief_runtime_parm2,
    globdata,
    pda_queue_cmcb,
    &scoring_reco_027dr,
    pgolfer_001dr);
 if (strcmp(globdata->psmgr_dasg_data.status_flag, "  ") != 0)
f_118489142_error();
}
